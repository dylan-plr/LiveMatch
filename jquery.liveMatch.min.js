!function(e){let t=[],i=[];function l(l){t.forEach(([t,o])=>{if(e(l).is(t)){let n=i.findIndex(([e])=>e===l);-1===n?(i.push([l,[o]]),o.apply(l)):i[n][1].includes(o)||(i[n][1].push(o),o.apply(l))}})}let o=new MutationObserver(function e(t){for(let i of t)if("childList"===i.type)i.addedNodes.forEach(e=>{1===e.nodeType&&(l(e),e.querySelectorAll("*").forEach(e=>{1===e.nodeType&&l(e)}))});else if("attributes"===i.type&&i.target.getAttribute(i.attributeName)!==i.oldValue){let o=i.target;1===o.nodeType&&(l(o),o.querySelectorAll("*").forEach(e=>{1===e.nodeType&&l(e)}))}});o.observe(document,{childList:!0,subtree:!0,attributes:!0,attributeOldValue:!0}),e.onMatch=function(i,o){t.push([i,o]),e(i).each(function(){l(this)})}}(jQuery);
