!function(e){let t=[],o=[];function n(n){t.forEach((([t,i])=>{if(e(n).is(t)){const e=o.findIndex((([e])=>e===n));-1===e?(o.push([n,[i]]),i.apply(n)):o[e][1].includes(i)||(o[e][1].push(i),i.apply(n))}}))}e.onMatch=function(o,i){return t.push([o,i]),e(o).each((function(){n(this)})),this};new MutationObserver((function(e){for(const t of e)if("childList"===t.type)t.addedNodes.forEach((e=>{1===e.nodeType&&(n(e),e.querySelectorAll("*").forEach((e=>{1===e.nodeType&&n(e)})))}));else if("attributes"===t.type&&t.target.getAttribute(t.attributeName)!==t.oldValue){let e=t.target;1===e.nodeType&&(n(e),e.querySelectorAll("*").forEach((e=>{1===e.nodeType&&n(e)})))}})).observe(document,{childList:!0,subtree:!0,attributes:!0,attributeOldValue:!0})}(jQuery);
